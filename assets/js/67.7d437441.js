(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{645:function(e,t,s){"use strict";s.r(t);var a=s(15),v=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"你知道哪些react-hooks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#你知道哪些react-hooks"}},[e._v("#")]),e._v(" 你知道哪些React hooks？")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("useState")]),e._v("：用于管理功能组件中的状态。")]),e._v(" "),t("li",[t("code",[e._v("useEffect")]),e._v("：用于在功能组件中执行副作用，例如获取数据或订阅事件。")]),e._v(" "),t("li",[t("code",[e._v("useContext")]),e._v("：用于访问功能组件内的 React 上下文的值。")]),e._v(" "),t("li",[t("code",[e._v("useRef")]),e._v("：用于创建对跨渲染持续存在的元素或值的可变引用。")]),e._v(" "),t("li",[t("code",[e._v("useCallback")]),e._v("：用于记忆函数以防止不必要的重新渲染。")]),e._v(" "),t("li",[t("code",[e._v("useMemo")]),e._v("：用于记忆值，通过缓存昂贵的计算来提高性能。")]),e._v(" "),t("li",[t("code",[e._v("useReducer")]),e._v("：用于通过reducer函数管理状态，类似于Redux的工作原理。")]),e._v(" "),t("li",[t("code",[e._v("useLayoutEffect")]),e._v("：与useEffect类似，但效果在所有DOM突变后同步运行。")])]),e._v(" "),t("h2",{attrs:{id:"为什么在react中usestate要使用数组而非对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么在react中usestate要使用数组而非对象"}},[e._v("#")]),e._v(" 为什么在React中useState要使用数组而非对象")]),e._v(" "),t("p",[e._v("当useState被多次使用的时候，对象解构不方便，数组便于解构")])])}),[],!1,null,null,null);t.default=v.exports}}]);